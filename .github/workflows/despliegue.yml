name: Deploy Symfony API with MySQL and Nginx

on:
    push:
        branches:
            - main

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout código
              uses: actions/checkout@v4

            - name: Verificar estructura de archivos
              run: |
                echo "Contenido del directorio actual:"
                ls -la
                echo "Contenido de la carpeta docker:"
                ls -la docker || echo "La carpeta docker no existe"

            - name: Preparar estructura de carpetas
              run: |
                if [ -d "Docker" ]; then
                  mkdir -p docker
                  mv Docker/* docker/
                  rmdir Docker
                fi

            - name: Iniciar sesión en Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            # Construir y subir imagen Symfony
            - name: Construir y subir imagen Symfony
              run: |
                  docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-app:latest -f docker/php.Dockerfile ./
                  docker push ${{ secrets.DOCKER_USERNAME }}/symfony-app:latest
                #ad
            # Construir y subir imagen Nginx
            - name: Construir y subir imagen Nginx
              run: |
                  docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-nginx:latest -f docker/nginx.Dockerfile ./
                  docker push ${{ secrets.DOCKER_USERNAME }}/symfony-nginx:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build-and-push
        steps:
            - name: Checkout código
              uses: actions/checkout@v4

            - name: Verificar estructura del repositorio
              run: |
                  echo "Directorio actual: $(pwd)"
                  ls -R

            - name: Transferir el archivo compose.yml al servidor remoto
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.REMOTE_HOST }}
                  username: ${{ secrets.REMOTE_USER }}
                  key: ${{ secrets.REMOTE_KEY }}
                  source: "compose.yml"
                  target: "~/deploy/"

            - name: Desplegar en servidor remoto
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.REMOTE_HOST }}
                  username: ${{ secrets.REMOTE_USER }}
                  key: ${{ secrets.REMOTE_KEY }}
                  script: |
                      sudo chmod 666 /var/run/docker.sock
                      echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

                      docker-compose -f ~/deploy/compose.yml pull
                      docker-compose -f ~/deploy/compose.yml down
                      docker-compose -f ~/deploy/compose.yml up -d --force-recreate

            - name: Crear la base de datos si no existe y ejecutar migraciones
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.REMOTE_HOST }}
                  username: ${{ secrets.REMOTE_USER }}
                  key: ${{ secrets.REMOTE_KEY }}
                  script: |
                      docker exec symfony_app php bin/console doctrine:database:create --if-not-exists
                      docker exec symfony_app php bin/console doctrine:migrations:migrate --no-interaction