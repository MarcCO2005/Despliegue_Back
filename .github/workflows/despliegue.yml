name: CI/CD Pipeline for Despliegue_Back

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: '!ChangeMe!'
          POSTGRES_DB: app
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo_pgsql
          tools: composer:v2

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Set environment variables
        run: |
          echo "APP_ENV=prod" >> .env
          echo "APP_DEBUG=0" >> .env
          echo "DATABASE_URL=postgresql://app:'!ChangeMe!'@localhost:5432/app?serverVersion=16&charset=utf8" >> .env
          echo "CORS_ALLOW_ORIGIN=^https?://.*?$" >> .env

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-interaction
          composer dump-autoload --optimize --no-dev --classmap-authoritative

      - name: Wait for PostgreSQL
        run: |
          while ! nc -z localhost 5432; do
            echo "Waiting for PostgreSQL to start..."
            sleep 1
          done

      - name: Run migrations
        run: |
          php bin/console doctrine:database:create --if-not-exists --no-interaction
          php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration

      - name: Clear and warmup cache
        run: |
          APP_ENV=prod APP_DEBUG=0 php bin/console cache:clear
          APP_ENV=prod APP_DEBUG=0 php bin/console cache:warmup

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "mkdir -p $DEPLOY_PATH"
          rsync -avz --delete --no-t --exclude 'tests' --exclude '.git' --exclude 'var/cache/*' . $USERNAME@$HOST:$DEPLOY_PATH
          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "cd $DEPLOY_PATH && composer install --no-dev --optimize-autoloader"
          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "cd $DEPLOY_PATH && APP_ENV=prod APP_DEBUG=0 php bin/console cache:clear"
          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "cd $DEPLOY_PATH && APP_ENV=prod APP_DEBUG=0 php bin/console cache:warmup"
          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "sudo systemctl restart apache2"

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/hola-mundo-multilenguaje:${{ github.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/hola-mundo-multilenguaje:${{ github.sha }}
