name: Deploy Symfony API with MySQL and Nginx

on:
    push:
        branches:
            - despliegueDocker

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout código
              uses: actions/checkout@v4

            - name: Iniciar sesión en Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            # Construir y subir imagen Symfony
            - name: Construir y subir imagen Symfony
              run: |
                  docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-app:latest -f backend/EdelmiroMonros/docker/php.Dockerfile backend/EdelmiroMonros/
                  docker push ${{ secrets.DOCKER_USERNAME }}/symfony-app:latest

            # Construir y subir imagen Nginx
            - name: Construir y subir imagen Nginx
              run: |
                  docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-nginx:latest -f backend/EdelmiroMonros/docker/nginx.Dockerfile backend/EdelmiroMonros/
                  docker push ${{ secrets.DOCKER_USERNAME }}/symfony-nginx:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build-and-push
        steps:
            - name: Checkout código
              uses: actions/checkout@v4
              with:
                  ref: despliegueDocker

            - name: Transferir archivos de configuración al servidor remoto
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.REMOTE_HOST }}
                  username: ${{ secrets.REMOTE_USER }}
                  key: ${{ secrets.REMOTE_KEY }}
                  source: |
                      backend/EdelmiroMonros/compose.yml
                      backend/EdelmiroMonros/.env
                      backend/EdelmiroMonros/migrations
                  target: ~/deploy/
                  strip_components: 2

            - name: Desplegar en servidor remoto
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.REMOTE_HOST }}
                  username: ${{ secrets.REMOTE_USER }}
                  key: ${{ secrets.REMOTE_KEY }}
                  script: |
                      sudo chmod 666 /var/run/docker.sock
                      echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
                      
                      cd ~/deploy
                      
                      # Configurar variables de entorno para MySQL
                      echo "DATABASE_URL=mysql://app:!ChangeMe!@database:3306/app?serverVersion=8.0.32&charset=utf8mb4" >> .env
                      echo "MYSQL_DATABASE=app" >> .env
                      echo "MYSQL_USER=app" >> .env
                      echo "MYSQL_PASSWORD=!ChangeMe!" >> .env
                      echo "MYSQL_ROOT_PASSWORD=!ChangeMe!" >> .env

                      docker-compose -f compose.yml pull
                      docker-compose -f compose.yml down
                      docker-compose -f compose.yml up -d --force-recreate

                      # Esperar a que MySQL esté listo
                      echo "Esperando a que MySQL esté listo..."
                      sleep 20

                      # Ejecutar migraciones
                      docker-compose -f compose.yml exec -T symfony_app php bin/console doctrine:database:create --if-not-exists --no-interaction
                      docker-compose -f compose.yml exec -T symfony_app php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration

                      # Limpiar caché
                      docker-compose -f compose.yml exec -T symfony_app php bin/console cache:clear --env=prod
                      docker-compose -f compose.yml exec -T symfony_app php bin/console cache:warmup --env=prod
